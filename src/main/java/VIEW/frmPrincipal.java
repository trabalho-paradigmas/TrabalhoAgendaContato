/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;

import DAO.ContatoAmizadeDAO;

import DAO.ContatoFamiliaDAO;
import DAO.ContatoTrabalhoDAO;
import DAO.UsuarioDAO;
import DTO.UsuarioDTO;
import Interfaces.ObservarDadosTabela;
import Interfaces.ObservarDadosTabelaAmizade;
import Interfaces.ObservarDadosTabelaFamilia;
import Interfaces.ObservarDadosTabelaOutros;
import Interfaces.ObservarDadosTabelaTrabalho;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sabri
 */
public class frmPrincipal extends javax.swing.JFrame {

//    frmAdicionarContato AdicionarContato = new frmAdicionarContato();
//    EditarContato EditarContato = new EditarContato();
    public frmPrincipal() throws SQLException {
        initComponents();
        getContentPane().add(panelPrincipal);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        lblUsuario = new javax.swing.JLabel();
        panelPrincipal = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        menuEditarUser = new javax.swing.JRadioButtonMenuItem();
        menuSairUser = new javax.swing.JRadioButtonMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUsuario.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblUsuario.setText("Usuario");

        panelPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1123, Short.MAX_VALUE)
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        jMenu2.setText("Opções de usuário");

        menuEditarUser.setSelected(true);
        menuEditarUser.setText("Editar");
        menuEditarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditarUserActionPerformed(evt);
            }
        });
        jMenu2.add(menuEditarUser);

        menuSairUser.setSelected(true);
        menuSairUser.setText("Sair");
        menuSairUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairUserActionPerformed(evt);
            }
        });
        jMenu2.add(menuSairUser);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(lblUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void menuSairUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairUserActionPerformed
        //Deslogar
        sair();
    }//GEN-LAST:event_menuSairUserActionPerformed

    private void menuEditarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditarUserActionPerformed
        //Envia para tela de edição do usuario
        retornaNomeUsuario();

    }//GEN-LAST:event_menuEditarUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmPrincipal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    public static javax.swing.JLabel lblUsuario;
    private javax.swing.JRadioButtonMenuItem menuEditarUser;
    private javax.swing.JRadioButtonMenuItem menuSairUser;
    public javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables

    private void sair() {
        int sair = JOptionPane.showConfirmDialog(null, "Deseja sair do sistema?", "Atenção!", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            dispose();
            frmLoginVIEW login = new frmLoginVIEW();
            login.setVisible(true);
        }
    }

    private void retornaNomeUsuario() {

        String nomeUsuario = lblUsuario.getText();

        String nome_usuario = lblUsuario.getText();
        UsuarioDTO usuarioDTO = new UsuarioDTO();
        usuarioDTO.setNome_usuario(nome_usuario);

        UsuarioDAO usuarioDAO = new UsuarioDAO();
        ResultSet rs = usuarioDAO.consultarNome(usuarioDTO);
        try {
            if (rs.next()) {
                try {
                    String nome = rs.getString("nome");
                    telaUsuarioVIEW telaUsuarioVIEW = new telaUsuarioVIEW();
                    telaUsuarioVIEW.recebeNomeUsuario(nomeUsuario);
                    telaUsuarioVIEW.recebeNome(nome);
                    telaUsuarioVIEW.setVisible(true);
                    jDesktopPane1.add(telaUsuarioVIEW);
                } catch (Exception erro) {
                    JOptionPane.showMessageDialog(null, "NOME DE USUARIO" + erro);
                }
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "NOME DE USUARIO" + erro);
        }

    }
//
//    
//    public void Excluir() {
//
//        if (TabelaFamilia.getSelectedRow() != -1) {
//            int linha = TabelaFamilia.getSelectedRow();
//            int idContato = (int) TabelaFamilia.getValueAt(linha, 0);
//
//            ContatoFamiliaDAO contatoFamiliaDAO = new ContatoFamiliaDAO();
//            contatoFamiliaDAO.delete(idContato);
//
//            DefaultTableModel model = (DefaultTableModel) TabelaFamilia.getModel();
//            model.removeRow(linha);
//            model.fireTableDataChanged();
//
//        } else if (TabelaAmizade.getSelectedRow() != -1) {
//            int linha = TabelaAmizade.getSelectedRow();
//            int idContato = (int) TabelaAmizade.getValueAt(linha, 0);
//
//            ContatoAmizadeDAO contatoAmizadeDAO = new ContatoAmizadeDAO();
//            contatoAmizadeDAO.delete(idContato);
//
//            DefaultTableModel model = (DefaultTableModel) TabelaAmizade.getModel();
//            model.removeRow(linha);
//            model.fireTableDataChanged();
//
//        } else if (TabelaTrabalho.getSelectedRow() != -1) {
//            int linha = TabelaTrabalho.getSelectedRow();
//            int idContato = (int) TabelaTrabalho.getValueAt(linha, 0);
//
//            ContatoTrabalhoDAO contatoTrabalhoDAO = new ContatoTrabalhoDAO();
//            contatoTrabalhoDAO.delete(idContato);
//
//            DefaultTableModel model = (DefaultTableModel) TabelaTrabalho.getModel();
//            model.removeRow(linha);
//            model.fireTableDataChanged();
//
//        } else if (TabelaOutros.getSelectedRow() != -1) {
//            int linha = TabelaOutros.getSelectedRow();
//            int idContato = (int) TabelaOutros.getValueAt(linha, 0);
//
//            ContatoTrabalhoDAO contatoTrabalhoDAO = new ContatoTrabalhoDAO();
//            contatoTrabalhoDAO.delete(idContato);
//
//            DefaultTableModel model = (DefaultTableModel) TabelaOutros.getModel();
//            model.removeRow(linha);
//            model.fireTableDataChanged();
//        }
//    }
//
//    private void confirmaExcluirContato() {
//        JButton buttonConfirmar = new JButton("Confirmar");
//        JButton buttonCancelar = new JButton("Cancelar");
//
//        // Adicionar os ouvintes de evento aos botões
//        buttonConfirmar.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                Excluir();
//                JOptionPane.getRootFrame().dispose();
//
//            }
//        });
//
//        buttonCancelar.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                // Redirecionar para a tela frmPrincipal
//                frmPrincipal objTelafrmPrincipalVIEW = null;
//                try {
//                    objTelafrmPrincipalVIEW = new frmPrincipal();
//                } catch (SQLException ex) {
//                    Logger.getLogger(frmAdicionarContato.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                objTelafrmPrincipalVIEW.setVisible(true);
//                setVisible(false); // Oculta a tela atual
//                JOptionPane.getRootFrame().dispose();
//            }
//        });
//
//        // Adicionar os botões a um array de objetos
//        Object[] options = {buttonConfirmar, buttonCancelar};
//
//        // Exibir o JOptionPane com os botões personalizados
//        int result = JOptionPane.showOptionDialog(null, "Certeza ao excluir?", "Excluir", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
//    }
//
//    private void enviaDadoTabela() {
//        if (TabelaFamilia.getSelectedRow() != -1) {
//            DefaultTableModel model = (DefaultTableModel) TabelaFamilia.getModel();
//            int selectedRow = TabelaFamilia.getSelectedRow();
//
//            int id = Integer.parseInt(TabelaFamilia.getValueAt(selectedRow, 0).toString());
//            String nome = (String) TabelaFamilia.getValueAt(selectedRow, 1);
//            String email = (String) TabelaFamilia.getValueAt(selectedRow, 2);
//            String celular = (String) TabelaFamilia.getValueAt(selectedRow, 3);
//            String parentesco = (String) TabelaFamilia.getValueAt(selectedRow, 4);
//
//            if (selectedRow == -1) {
//                JOptionPane.showMessageDialog(null, "Nenhum contato selecionado");
//                return;
//            } else {
//                EditarContato editarContato = new EditarContato();
//                editarContato.TextNome.setText(nome);
//                editarContato.lblId.setText(String.valueOf(id));
//                editarContato.TextCelular.setText(celular);
//                editarContato.TextEmail.setText(email);
//                editarContato.TextParentesco.setText(parentesco);
//                editarContato.TextComercial.setEnabled(false);
//                editarContato.TextDepartamento.setEditable(false);
//                editarContato.TextApelido.setEditable(false);
//                editarContato.TextComercial.setEditable(false);
//                editarContato.setVisible(true);
//                editarContato.pack();
//                editarContato.setLocationRelativeTo(null);
//                editarContato.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//
//            }
//        } else if (TabelaAmizade.getSelectedRow() != -1) {
//            DefaultTableModel model = (DefaultTableModel) TabelaAmizade.getModel();
//            int selectedRow = TabelaAmizade.getSelectedRow();
//
//            int id = Integer.parseInt(TabelaAmizade.getValueAt(selectedRow, 0).toString());
//            String nome = (String) TabelaAmizade.getValueAt(selectedRow, 1);
//            String email = (String) TabelaAmizade.getValueAt(selectedRow, 2);
//            String celular = (String) TabelaAmizade.getValueAt(selectedRow, 3);
//            String parentesco = (String) TabelaAmizade.getValueAt(selectedRow, 4);
//
//            if (selectedRow == -1) {
//                JOptionPane.showMessageDialog(null, "Nenhum contato selecionado");
//                return;
//            } else {
//                EditarContato editarContato = new EditarContato();
//                editarContato.TextNome.setText(nome);
//                editarContato.lblId.setText(String.valueOf(id));
//                editarContato.TextCelular.setText(celular);
//                editarContato.TextEmail.setText(email);
//                editarContato.TextApelido.setText(parentesco);
//                editarContato.TextDepartamento.setEditable(false);
//                editarContato.TextComercial.setEditable(false);
//                editarContato.TextParentesco.setEditable(false);
//                editarContato.setVisible(true);
//                editarContato.pack();
//                editarContato.setLocationRelativeTo(null);
//                editarContato.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//
//            }
//        } else if (TabelaTrabalho.getSelectedRow() != -1) {
//            DefaultTableModel model = (DefaultTableModel) TabelaTrabalho.getModel();
//            int selectedRow = TabelaTrabalho.getSelectedRow();
//
//            int id = Integer.parseInt(TabelaOutros.getValueAt(selectedRow, 0).toString());
//            String nome = (String) TabelaTrabalho.getValueAt(selectedRow, 1);
//            String email = (String) TabelaTrabalho.getValueAt(selectedRow, 2);
//            String celular = (String) TabelaTrabalho.getValueAt(selectedRow, 3);
//            String parentesco = (String) TabelaTrabalho.getValueAt(selectedRow, 4);
//
//            if (selectedRow == -1) {
//                JOptionPane.showMessageDialog(null, "Nenhum contato selecionado");
//                return;
//            } else {
//                EditarContato editarContato = new EditarContato();
//                editarContato.TextNome.setText(nome);
//                editarContato.lblId.setText(String.valueOf(id));
//                editarContato.TextCelular.setText(celular);
//                editarContato.TextEmail.setText(email);
//                editarContato.TextComercial.setText(parentesco);
//                editarContato.TextDepartamento.setText(parentesco);
//                editarContato.TextParentesco.setEditable(false);
//                editarContato.TextApelido.setEditable(false);
//                editarContato.setVisible(true);
//                editarContato.pack();
//                editarContato.setLocationRelativeTo(null);
//                editarContato.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//
//            }
//        } else if (TabelaOutros.getSelectedRow() != -1) {
//            DefaultTableModel model = (DefaultTableModel) TabelaOutros.getModel();
//            int selectedRow = TabelaOutros.getSelectedRow();
//
//            int id = Integer.parseInt(TabelaOutros.getValueAt(selectedRow, 0).toString());
//            String nome = (String) TabelaOutros.getValueAt(selectedRow, 1);
//            String email = (String) TabelaOutros.getValueAt(selectedRow, 2);
//            String celular = (String) TabelaOutros.getValueAt(selectedRow, 3);
//            String parentesco = (String) TabelaOutros.getValueAt(selectedRow, 4);
//
//            if (selectedRow == -1) {
//                JOptionPane.showMessageDialog(null, "Nenhum contato selecionado");
//                return;
//            } else {
//                EditarContato editarContato = new EditarContato();
//                editarContato.lblId.setText(String.valueOf(id));
//                editarContato.TextNome.setText(nome);
//                editarContato.TextCelular.setText(celular);
//                editarContato.TextEmail.setText(email);
//                editarContato.TextComercial.setText(parentesco);
//                editarContato.TextApelido.setEditable(false);
//                editarContato.TextParentesco.setEditable(false);
//                editarContato.TextDepartamento.setEditable(false);
//                editarContato.setVisible(true);
//                editarContato.pack();
//                editarContato.setLocationRelativeTo(null);
//                editarContato.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//
//            }
//        }
//
//    }
//    
//    public void cadastrarContatos(){   // Encaminhando para a tela de adicionar contato
//        frmAdicionarContato objTelafrmAdicionarContatoVIEW = null;
//        objTelafrmAdicionarContatoVIEW = new frmAdicionarContato();
//        objTelafrmAdicionarContatoVIEW.setVisible(true);
//        setVisible(false); // Oculta a tela atual
//        JOptionPane.getRootFrame().dispose();
//    }
//     
//    
//     /* Esses métodos tem como objetivo atualizar a tabela com 
//    os dados mais recentes obtidos do banco de dados, refletindo 
//    assim as alterações realizadas nos contatos e tambem para o campo de pesquisa */
//    public void lerTabela(ObservarDadosTabela observador, JTable tabela, JTextField campoPesquisa) throws SQLException {
//    
//        DefaultTableModel modelo = (DefaultTableModel) tabela.getModel();
//        modelo.setNumRows(0);
//        observador.lerDados(modelo, campoPesquisa.getText());
//    
//   }
//
//   public void lerTabelas() throws SQLException {
//        lerTabela((ObservarDadosTabela) new ObservarDadosTabelaFamilia(), TabelaFamilia, TextPesquisar );
//        lerTabela((ObservarDadosTabela) new ObservarDadosTabelaAmizade(), TabelaAmizade, TextPesquisar );
//        lerTabela((ObservarDadosTabela) new ObservarDadosTabelaTrabalho(), TabelaTrabalho, TextPesquisar );
//        lerTabela((ObservarDadosTabela) new ObservarDadosTabelaOutros(), TabelaOutros, TextPesquisar );
//        
//    }
//
//   
}
